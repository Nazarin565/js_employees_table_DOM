{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _type_of(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nvar table = document.querySelector(\"table\");\nvar tr = document.querySelector(\"tr\");\nvar tbody = document.querySelector(\"tbody\");\nvar form = document.createElement(\"form\");\nvar messageCount = 0;\nfunction createForm() {\n    form.classList.add(\"new-employee-form\");\n    var fields = [\n        {\n            fieldType: \"input\",\n            name: \"name\",\n            type: \"text\",\n            label: \"Name: \"\n        },\n        {\n            fieldType: \"input\",\n            name: \"position\",\n            type: \"text\",\n            label: \"Position: \"\n        },\n        {\n            fieldType: \"select\",\n            name: \"office\",\n            label: \"Office: \",\n            options: [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ]\n        },\n        {\n            fieldType: \"input\",\n            name: \"age\",\n            type: \"number\",\n            label: \"Age: \"\n        },\n        {\n            fieldType: \"input\",\n            name: \"salary\",\n            type: \"number\",\n            label: \"Salary: \"\n        }\n    ];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        var _loop = function() {\n            var field = _step.value;\n            var label = document.createElement(\"label\");\n            label.textContent = field.label;\n            if (field.fieldType === \"input\") {\n                var input = document.createElement(\"input\");\n                input.name = field.name;\n                input.type = field.type;\n                input.setAttribute(\"data-qa\", field.name);\n                input.style.marginLeft = \"16px\";\n                label.appendChild(input);\n            } else if (field.fieldType === \"select\") {\n                var select = document.createElement(\"select\");\n                select.name = field.name;\n                select.setAttribute(\"data-qa\", field.name);\n                field.options.forEach(function(opt) {\n                    var option = document.createElement(\"option\");\n                    option.value = opt;\n                    option.textContent = opt;\n                    select.appendChild(option);\n                });\n                label.appendChild(select);\n            } else return {\n                v: void void 0\n            };\n            form.appendChild(label);\n        };\n        for(var _iterator = fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var _ret = _loop();\n            if (_type_of(_ret) === \"object\") return _ret.v;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var button = document.createElement(\"button\");\n    button.textContent = \"Save to table\";\n    button.type = \"submit\";\n    form.appendChild(button);\n    table.insertAdjacentElement(\"afterend\", form);\n}\nfunction pushNotification(type, description) {\n    var message = document.createElement(\"div\");\n    message.className = \"notification \".concat(type);\n    message.setAttribute(\"data-qa\", \"notification\");\n    message.style.position = \"fixed\";\n    message.style.right = \"10px\";\n    var h2 = document.createElement(\"h2\");\n    h2.className = \"title\";\n    h2.textContent = type === \"error\" ? \"Error\" : \"Success\";\n    var p = document.createElement(\"p\");\n    p.textContent = description;\n    message.appendChild(h2);\n    message.appendChild(p);\n    document.body.appendChild(message);\n    message.style.top = \"\".concat(messageCount * (message.offsetHeight + 10), \"px\");\n    messageCount++;\n    setTimeout(function() {\n        message.remove();\n        messageCount--;\n    }, 2000);\n}\nfunction sortTable(sortIndex) {\n    var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n    var sortOrder = tr.querySelectorAll(\"th\")[sortIndex].classList.contains(\"asc\");\n    tr.querySelectorAll(\"th\").forEach(function(item, index) {\n        if (index !== sortIndex) item.classList.remove(\"asc\", \"desc\");\n    });\n    rows.sort(function(a, b) {\n        var aText = a.querySelectorAll(\"td\")[sortIndex].innerText;\n        var bText = b.querySelectorAll(\"td\")[sortIndex].innerText;\n        var aNumber = parseFloat(aText.replace(/[$,]/g, \"\"));\n        var bNumber = parseFloat(bText.replace(/[$,]/g, \"\"));\n        if (aText.toString() === aText && bText.toString() === bText && isNaN(aNumber) && isNaN(bNumber)) return sortOrder ? bText.localeCompare(aText) : aText.localeCompare(bText);\n        else return sortOrder ? bNumber - aNumber : aNumber - bNumber;\n    });\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n}\ncreateForm();\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var newEmployeeData = {};\n    var hasErrors = false;\n    form.querySelectorAll(\"label\").forEach(function(label) {\n        var input = label.firstElementChild;\n        if (!input.value.trim()) {\n            pushNotification(\"error\", \"\".concat(input.name.charAt(0).toUpperCase() + input.name.slice(1), \" field can't be empty!\"));\n            hasErrors = true;\n            return;\n        } else if (input.name === \"name\" && input.value.trim().length < 4) {\n            pushNotification(\"error\", \"Name field must contain more than 4 characters!\");\n            hasErrors = true;\n            return;\n        } else if (input.name === \"age\" && (input.value.trim() < 18 || input.value.trim() > 90)) {\n            pushNotification(\"error\", \"Age must be from 18 to 90\");\n            hasErrors = true;\n            return;\n        }\n        if (input.name === \"salary\") {\n            var salary = parseFloat(input.value.trim());\n            if (isNaN(salary)) {\n                pushNotification(\"error\", \"Salary must be a valid number.\");\n                return;\n            }\n            newEmployeeData[input.name] = \"$\".concat(parseFloat(salary.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n        } else newEmployeeData[input.name] = input.value.trim();\n    });\n    if (hasErrors) return;\n    function addNewEmployeeToTable() {\n        var newRow = document.createElement(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Object.keys(newEmployeeData)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var key = _step.value;\n                var newTd = document.createElement(\"td\");\n                newTd.textContent = newEmployeeData[key];\n                newRow.appendChild(newTd);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        tbody.appendChild(newRow);\n        pushNotification(\"success\", \"New employee was added successfully!\");\n    }\n    addNewEmployeeToTable();\n});\ntbody.addEventListener(\"click\", function(e) {\n    var activeLink = e.target.closest(\"tr\");\n    if (!activeLink) return;\n    tbody.querySelectorAll(\"tr\").forEach(function(row) {\n        row.classList.remove(\"active\");\n    });\n    activeLink.classList.add(\"active\");\n});\ntr.addEventListener(\"click\", function(e) {\n    var link = e.target.closest(\"th\");\n    var index;\n    tr.querySelectorAll(\"th\").forEach(function(item, i) {\n        if (item === link) index = i;\n    });\n    if (!link) return;\n    sortTable(index);\n    if (link.classList.contains(\"asc\")) {\n        link.classList.remove(\"asc\");\n        link.classList.add(\"desc\");\n    } else if (link.classList.contains(\"desc\")) {\n        link.classList.remove(\"desc\");\n        link.classList.add(\"asc\");\n    } else link.classList.add(\"asc\");\n});\ntbody.addEventListener(\"dblclick\", function(e) {\n    var editingCell = e.target.closest(\"td\");\n    if (!editingCell) return;\n    var editingInput = document.createElement(\"input\");\n    editingInput.value = editingCell.textContent;\n    editingInput.classList.add(\"cell-input\");\n    editingCell.textContent = \"\";\n    editingCell.appendChild(editingInput);\n    editingInput.focus();\n    editingInput.select();\n    editingInput.addEventListener(\"blur\", function() {\n        editingCell.textContent = editingInput.value || editingCell.textContent;\n    });\n    editingInput.addEventListener(\"keydown\", function(ev) {\n        if (ev.key === \"Enter\") editingCell.textContent = editingInput.value || editingCell.textContent;\n    });\n});\n\n//# sourceMappingURL=index.daab612f.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tr = document.querySelector('tr');\nconst tbody = document.querySelector('tbody');\nconst form = document.createElement('form');\n\nlet messageCount = 0;\n\nfunction createForm() {\n  form.classList.add('new-employee-form');\n\n  const fields = [\n    {\n      fieldType: 'input',\n      name: 'name',\n      type: 'text',\n      label: 'Name: ',\n    },\n    {\n      fieldType: 'input',\n      name: 'position',\n      type: 'text',\n      label: 'Position: ',\n    },\n    {\n      fieldType: 'select',\n      name: 'office',\n      label: 'Office: ',\n      options: [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ],\n    },\n    {\n      fieldType: 'input',\n      name: 'age',\n      type: 'number',\n      label: 'Age: ',\n    },\n    {\n      fieldType: 'input',\n      name: 'salary',\n      type: 'number',\n      label: 'Salary: ',\n    },\n  ];\n\n  for (const field of fields) {\n    const label = document.createElement('label');\n\n    label.textContent = field.label;\n\n    if (field.fieldType === 'input') {\n      const input = document.createElement('input');\n\n      input.name = field.name;\n      input.type = field.type;\n      input.setAttribute('data-qa', field.name);\n\n      input.style.marginLeft = '16px';\n\n      label.appendChild(input);\n    } else if (field.fieldType === 'select') {\n      const select = document.createElement('select');\n\n      select.name = field.name;\n      select.setAttribute('data-qa', field.name);\n\n      field.options.forEach((opt) => {\n        const option = document.createElement('option');\n\n        option.value = opt;\n        option.textContent = opt;\n\n        select.appendChild(option);\n      });\n\n      label.appendChild(select);\n    } else {\n      return;\n    }\n\n    form.appendChild(label);\n  }\n\n  const button = document.createElement('button');\n\n  button.textContent = 'Save to table';\n  button.type = 'submit';\n\n  form.appendChild(button);\n\n  table.insertAdjacentElement('afterend', form);\n}\n\nfunction pushNotification(type, description) {\n  const message = document.createElement('div');\n\n  message.className = `notification ${type}`;\n  message.setAttribute('data-qa', 'notification');\n  message.style.position = 'fixed';\n  message.style.right = '10px';\n\n  const h2 = document.createElement('h2');\n\n  h2.className = 'title';\n  h2.textContent = type === 'error' ? 'Error' : 'Success';\n\n  const p = document.createElement('p');\n\n  p.textContent = description;\n\n  message.appendChild(h2);\n  message.appendChild(p);\n\n  document.body.appendChild(message);\n\n  message.style.top = `${messageCount * (message.offsetHeight + 10)}px`;\n\n  messageCount++;\n\n  setTimeout(() => {\n    message.remove();\n    messageCount--;\n  }, 2000);\n}\n\nfunction sortTable(sortIndex) {\n  const rows = Array.from(tbody.querySelectorAll('tr'));\n\n  const sortOrder = tr\n    .querySelectorAll('th')\n    [sortIndex].classList.contains('asc');\n\n  tr.querySelectorAll('th').forEach((item, index) => {\n    if (index !== sortIndex) {\n      item.classList.remove('asc', 'desc');\n    }\n  });\n\n  rows.sort((a, b) => {\n    const aText = a.querySelectorAll('td')[sortIndex].innerText;\n    const bText = b.querySelectorAll('td')[sortIndex].innerText;\n\n    const aNumber = parseFloat(aText.replace(/[$,]/g, ''));\n    const bNumber = parseFloat(bText.replace(/[$,]/g, ''));\n\n    if (\n      aText.toString() === aText &&\n      bText.toString() === bText &&\n      isNaN(aNumber) &&\n      isNaN(bNumber)\n    ) {\n      return sortOrder\n        ? bText.localeCompare(aText)\n        : aText.localeCompare(bText);\n    } else {\n      return sortOrder ? bNumber - aNumber : aNumber - bNumber;\n    }\n  });\n\n  rows.forEach((row) => tbody.appendChild(row));\n}\n\ncreateForm();\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const newEmployeeData = {};\n  let hasErrors = false;\n\n  form.querySelectorAll('label').forEach((label) => {\n    const input = label.firstElementChild;\n\n    if (!input.value.trim()) {\n      pushNotification(\n        'error',\n        `${input.name.charAt(0).toUpperCase() + input.name.slice(1)} field can't be empty!`,\n      );\n      hasErrors = true;\n\n      return;\n    } else if (input.name === 'name' && input.value.trim().length < 4) {\n      pushNotification(\n        'error',\n        'Name field must contain more than 4 characters!',\n      );\n      hasErrors = true;\n\n      return;\n    } else if (\n      input.name === 'age' &&\n      (input.value.trim() < 18 || input.value.trim() > 90)\n    ) {\n      pushNotification('error', 'Age must be from 18 to 90');\n      hasErrors = true;\n\n      return;\n    }\n\n    if (input.name === 'salary') {\n      const salary = parseFloat(input.value.trim());\n\n      if (isNaN(salary)) {\n        pushNotification('error', 'Salary must be a valid number.');\n\n        return;\n      }\n\n      newEmployeeData[input.name] = `$${parseFloat(salary.toFixed(2))\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`;\n    } else {\n      newEmployeeData[input.name] = input.value.trim();\n    }\n  });\n\n  if (hasErrors) {\n    return;\n  }\n\n  function addNewEmployeeToTable() {\n    const newRow = document.createElement('tr');\n\n    for (const key of Object.keys(newEmployeeData)) {\n      const newTd = document.createElement('td');\n\n      newTd.textContent = newEmployeeData[key];\n\n      newRow.appendChild(newTd);\n    }\n\n    tbody.appendChild(newRow);\n\n    pushNotification('success', 'New employee was added successfully!');\n  }\n\n  addNewEmployeeToTable();\n});\n\ntbody.addEventListener('click', (e) => {\n  const activeLink = e.target.closest('tr');\n\n  if (!activeLink) {\n    return;\n  }\n\n  tbody.querySelectorAll('tr').forEach((row) => {\n    row.classList.remove('active');\n  });\n\n  activeLink.classList.add('active');\n});\n\ntr.addEventListener('click', (e) => {\n  const link = e.target.closest('th');\n\n  let index;\n\n  tr.querySelectorAll('th').forEach((item, i) => {\n    if (item === link) {\n      index = i;\n    }\n  });\n\n  if (!link) {\n    return;\n  }\n\n  sortTable(index);\n\n  if (link.classList.contains('asc')) {\n    link.classList.remove('asc');\n    link.classList.add('desc');\n  } else if (link.classList.contains('desc')) {\n    link.classList.remove('desc');\n    link.classList.add('asc');\n  } else {\n    link.classList.add('asc');\n  }\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  const editingCell = e.target.closest('td');\n\n  if (!editingCell) {\n    return;\n  }\n\n  const editingInput = document.createElement('input');\n\n  editingInput.value = editingCell.textContent;\n\n  editingInput.classList.add('cell-input');\n\n  editingCell.textContent = '';\n  editingCell.appendChild(editingInput);\n\n  editingInput.focus();\n  editingInput.select();\n\n  editingInput.addEventListener('blur', () => {\n    editingCell.textContent = editingInput.value || editingCell.textContent;\n  });\n\n  editingInput.addEventListener('keydown', (ev) => {\n    if (ev.key === 'Enter') {\n      editingCell.textContent = editingInput.value || editingCell.textContent;\n    }\n  });\n});\n"],"names":["table","document","querySelector","tr","tbody","form","createElement","messageCount","pushNotification","type","description","message","className","concat","setAttribute","style","position","right","h2","textContent","p","appendChild","body","top","offsetHeight","setTimeout","remove","createForm","classList","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","fields","fieldType","name","label","options","Symbol","iterator","next","done","_ret","_loop","field","value","input","marginLeft","v","select","forEach","opt","option","_type_of","obj","constructor","err","return","button","insertAdjacentElement","addEventListener","e","preventDefault","newEmployeeData","hasErrors","querySelectorAll","firstElementChild","trim","length","charAt","toUpperCase","slice","salary","parseFloat","isNaN","toFixed","toString","replace","addNewEmployeeToTable","newRow","Object","keys","key","newTd","activeLink","target","closest","row","sortIndex","rows","sortOrder","index","link","item","i","Array","from","contains","sort","a","b","aText","innerText","bText","aNumber","bNumber","localeCompare","editingCell","editingInput","focus","ev"],"version":3,"file":"index.daab612f.js.map"}